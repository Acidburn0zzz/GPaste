# This file is part of GPaste.
#
# Copyright 2011-2012 Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
#
# GPaste is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# GPaste is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GPaste.  If not, see <http://www.gnu.org/licenses/>.

AM_DISTCHECK_CONFIGURE_FLAGS = \
	--with-dbusservicesdir=$$dc_install_base/$(dbusservicesdir) \
	--enable-applet \
	$(NULL)
ACLOCAL_AMFLAGS  = -I m4 ${ACLOCAL_FLAGS}
AM_MAKEFLAGS = --no-print-directory
SUBDIRS = po

# Global part

applicationsdir = $(datadir)/applications
nodist_applications_in_files = $(NULL)
nodist_applications_DATA = $(NULL)

autostartdir = $(sysconfdir)/xdg/autostart
nodist_autostart_in_files = $(NULL)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = $(NULL)

bin_PROGRAMS = $(NULL)
pkglibexec_PROGRAMS = $(NULL)

lib_LTLIBRARIES = $(NULL)

nodist_man_MANS = $(NULL)

AM_VALAFLAGS = \
	--vapidir=$(srcdir)/vapi \
	--pkg=config \
	--pkg=posix \
	$(GIO_VALAFLAGS) \
	$(NULL)

AM_CFLAGS = \
	-I$(srcdir)/libgpaste \
	-DG_PASTE_COMPILATION \
	-DLOCALEDIR=\"$(localedir)\" \
	-DPKGLIBEXECDIR=\"$(pkglibexecdir)\" \
	$(GLIB_CFLAGS) \
	$(GOBJECT_CFLAGS) \
	$(GIO_CFLAGS) \
	$(NULL)

VALA_CFLAGS = \
	--include config.h \
	-Wno-unused-parameter \
	-Wno-unused-variable \
	-Wno-missing-field-initializers \
	-Wno-unused-but-set-variable \
	$(NULL)

AM_LIBS = \
	$(GLIB_LIBS) \
	$(GOBJECT_LIBS) \
	$(GIO_LIBS) \
	$(NULL)

EXTRA_DIST = \
	autogen.sh \
	vapi/config.vapi \
	$(NULL)

CLEANFILES = \
	$(nodist_applications_in_files) \
	$(nodist_applications_DATA) \
	$(nodist_autostart_in_files) \
	$(nodist_man_MANS) \
	$(NULL)

# Special rules

@INTLTOOL_DESKTOP_RULE@

SUFFIXES = .service .service.in .json .json.in .desktop.in .desktop.in.in
.service.in.service:
	$(AM_V_GEN) $(SED) -e 's,[@]pkglibexecdir[@],$(pkglibexecdir),g' <$^ >$@
.json.in.json:
	@ $(MKDIR_P) src/applets/gnome-shell
	$(AM_V_GEN) $(SED) -e 's,[@]localedir[@],$(localedir),g' \
					   -e 's,[@]pkglibexecdir[@],$(pkglibexecdir),g' \
					   < $< > $@
.desktop.in.in.desktop.in:
	$(AM_V_GEN) $(SED) -e 's,[@]pkglibexecdir[@],$(pkglibexecdir),g' < $< > $@

update-po:
	$(MAKE) -C po $@

release:
	git commit -asm "Release $(PACKAGE_NAME) $(PACKAGE_VERSION)"
	git tag -sm "Release $(PACKAGE_NAME) $(PACKAGE_VERSION)" v$(PACKAGE_VERSION)
	$(MAKE) distcheck

# Specific parts

include libgpaste/libgpaste.mk
include gi/gi.mk
include vapi/vapi.mk

include bin/gpasted.mk
include bin/gpaste.mk
include bin/gpaste-settings.mk
include bin/gpaste-applet.mk
include src/applets/gnome-shell/extension.mk

include data/gsettings.mk
include data/dbus.mk
include data/completions/completions.mk

include man/man.mk

# Generate a ChangeLog file from 'git log'
dist-hook:
	@ if test -d "$(srcdir)/.git"; \
	then \
	    echo Creating ChangeLog ; \
	    cd "$(srcdir)" ; \
	    echo -e '# Generated by Makefile. Do not edit.\n\n'; > ChangeLog.tmp \
	    $(srcdir)/build-aux/missing --run git log --stat v2.0.. > ChangeLog.tmp \
	    if ! mv -f ChangeLog.tmp $(distdir)/ChangeLog; then \
			rm -f ChangeLog.tmp ; \
	        echo Failed to generate ChangeLog >&2 ); \
	    fi \
	else \
	    echo A git clone is required to generate a ChangeLog >&2; \
	fi
